spring.application.name=filesharingapp

# Environment Configuration
context.initializer.classes=com.cloud.computing.filesharingapp.config.EnvironmentConfig

# Database Configuration
spring.datasource.url=${DB_URL:jdbc:h2:mem:testdb}
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=${DB_USERNAME:sa}
spring.datasource.password=${DB_PASSWORD:password}
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true
spring.jpa.hibernate.ddl-auto=create-drop

# File Upload Configuration
spring.servlet.multipart.max-file-size=${MAX_FILE_SIZE:10MB}
spring.servlet.multipart.max-request-size=${MAX_REQUEST_SIZE:10MB}
file.upload-dir=${FILE_UPLOAD_DIR:uploads}

# Server Configuration
server.port=${SERVER_PORT:8080}

# JWT Configuration (Base64 encoded 512-bit key for HS512)
app.jwtSecret=${JWT_SECRET}
app.jwtExpirationMs=${JWT_EXPIRATION_MS:86400000}

# Logging Configuration
logging.level.com.cloud.computing.filesharingapp=INFO
logging.level.org.springframework.security=WARN
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Create logs directory
logging.file.path=logs

# Email Configuration
spring.mail.host=${EMAIL_HOST:smtp.gmail.com}
spring.mail.port=${EMAIL_PORT:587}
spring.mail.username=${EMAIL_USERNAME:}
spring.mail.password=${EMAIL_PASSWORD:}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=3000
spring.mail.properties.mail.smtp.writetimeout=5000

# Email Verification Settings
app.verification.code-length=${VERIFICATION_CODE_LENGTH:6}
app.verification.expiry-minutes=${VERIFICATION_EXPIRY_MINUTES:15}
app.verification.max-attempts=${VERIFICATION_MAX_ATTEMPTS:3}
app.verification.max-codes-per-hour=${VERIFICATION_MAX_CODES_PER_HOUR:5}
app.verification.from-email=${EMAIL_FROM:noreply@filesharingapp.com}
app.verification.from-name=${EMAIL_FROM_NAME:File Sharing App}

# File Sharing Configuration
# Default expiration time for new shares (in hours)
app.sharing.default-expiry-hours=${SHARING_DEFAULT_EXPIRY_HOURS:24}
# Maximum allowed expiration time for shares (in days)
app.sharing.max-expiry-days=${SHARING_MAX_EXPIRY_DAYS:30}
# Maximum number of active shares per user
app.sharing.max-shares-per-user=${SHARING_MAX_SHARES_PER_USER:100}
# Maximum number of accesses allowed per share
app.sharing.max-access-per-share=${SHARING_MAX_ACCESS_PER_SHARE:1000}

# Rate Limiting Configuration
# Maximum number of shares a user can create per hour
app.sharing.max-shares-per-hour=${SHARING_MAX_SHARES_PER_HOUR:10}
# Global rate limit: maximum accesses per IP address per hour (across all shares)
app.sharing.max-access-per-ip-per-hour=${SHARING_MAX_ACCESS_PER_IP_PER_HOUR:100}
# Per-share rate limit: maximum accesses per IP address per share per hour
app.sharing.max-access-per-share-per-ip-per-hour=${SHARING_MAX_ACCESS_PER_SHARE_PER_IP_PER_HOUR:20}
# Time window for rate limiting calculations (in hours)
app.sharing.rate-limit-window-hours=${SHARING_RATE_LIMIT_WINDOW_HOURS:1}

# Security Configuration
# Whether to require HTTPS for share links (recommended for production)
app.sharing.require-https=${SHARING_REQUIRE_HTTPS:true}
# Whether to log all share access attempts for security monitoring
app.sharing.log-access=${SHARING_LOG_ACCESS:true}
# Threshold for detecting suspicious activity (accesses per hour from single IP)
app.sharing.suspicious-activity-threshold=${SHARING_SUSPICIOUS_ACTIVITY_THRESHOLD:50}

# Application Base URL Configuration
# Base URL for generating share links (should match your domain in production)
app.base-url=${APP_BASE_URL:http://localhost:8080}

# Maintenance Configuration
# Number of days to retain access logs before cleanup
app.maintenance.access-log-retention-days=${MAINTENANCE_ACCESS_LOG_RETENTION_DAYS:90}
# Number of days to retain old verification records
app.maintenance.verification-retention-days=${MAINTENANCE_VERIFICATION_RETENTION_DAYS:30}
# Maximum acceptable database query time in milliseconds
app.maintenance.max-query-time-ms=${MAINTENANCE_MAX_QUERY_TIME_MS:1000}
# Maximum acceptable access rate per hour before flagging as suspicious
app.maintenance.max-access-rate-per-hour=${MAINTENANCE_MAX_ACCESS_RATE_PER_HOUR:1000}
# Minimum number of accesses from an IP to be considered suspicious
app.maintenance.suspicious-access-threshold=${MAINTENANCE_SUSPICIOUS_ACCESS_THRESHOLD:50}
# Maximum number of suspicious IPs before system health warning
app.maintenance.max-suspicious-ips=${MAINTENANCE_MAX_SUSPICIOUS_IPS:5}
# Maximum number of log files to keep during cleanup
app.maintenance.max-log-files=${MAINTENANCE_MAX_LOG_FILES:10}
# Enable or disable automated cleanup tasks
app.maintenance.cleanup-enabled=${MAINTENANCE_CLEANUP_ENABLED:true}
# Enable or disable analytics generation
app.maintenance.analytics-enabled=${MAINTENANCE_ANALYTICS_ENABLED:true}
# Enable or disable health monitoring
app.maintenance.health-monitoring-enabled=${MAINTENANCE_HEALTH_MONITORING_ENABLED:true}

# Advanced Security Configuration
# Maximum failed access attempts per IP before blacklisting
app.security.max-failed-attempts-per-ip=${SECURITY_MAX_FAILED_ATTEMPTS_PER_IP:20}
# Duration to blacklist IPs in hours
app.security.ip-blacklist-duration-hours=${SECURITY_IP_BLACKLIST_DURATION_HOURS:24}
# Enable geolocation-based access controls
app.security.geolocation-enabled=${SECURITY_GEOLOCATION_ENABLED:false}
# Comma-separated list of allowed country codes (empty = allow all)
app.security.allowed-countries=${SECURITY_ALLOWED_COUNTRIES:}

# Rate Limiting Advanced Configuration
# Burst allowance for rate limiting (additional requests allowed in short bursts)
app.ratelimit.burst-allowance=${RATELIMIT_BURST_ALLOWANCE:5}
# Multiplier for trusted users (increases their rate limits)
app.ratelimit.trusted-user-multiplier=${RATELIMIT_TRUSTED_USER_MULTIPLIER:2}
# Enable dynamic rate limit adjustment based on system load
app.ratelimit.dynamic-adjustment-enabled=${RATELIMIT_DYNAMIC_ADJUSTMENT_ENABLED:true}
# System load threshold for triggering rate limit adjustments (0.0-1.0)
app.ratelimit.system-load-threshold=${RATELIMIT_SYSTEM_LOAD_THRESHOLD:0.8}

# Security Monitoring Configuration
# Anomaly detection threshold multiplier
app.security.monitoring.anomaly-threshold=${SECURITY_MONITORING_ANOMALY_THRESHOLD:3}
# Alert threshold for suspicious activity
app.security.monitoring.alert-threshold=${SECURITY_MONITORING_ALERT_THRESHOLD:10}
# Analysis window for security monitoring in hours
app.security.monitoring.analysis-window-hours=${SECURITY_MONITORING_ANALYSIS_WINDOW_HOURS:24}
# Baseline period for anomaly detection in days
app.security.monitoring.baseline-days=${SECURITY_MONITORING_BASELINE_DAYS:7}
