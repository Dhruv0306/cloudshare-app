name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Build application
      run: mvn clean package -DskipTests
      
    - name: Build frontend
      run: |
        cd frontend
        npm ci
        npm run build
        
    - name: Create deployment artifact
      run: |
        mkdir -p deployment
        cp target/*.jar deployment/
        cp -r frontend/build deployment/frontend
        
    - name: Upload deployment artifact
      uses: actions/upload-artifact@v3
      with:
        name: deployment-${{ github.sha }}
        path: deployment/
        
    # Add your deployment steps here (e.g., Docker, AWS, etc.)
    # Example for Docker:
    # - name: Build Docker image
    #   run: docker build -t filesharingapp:${{ github.sha }} .
    #   
    # - name: Deploy to production
    #   run: |
    #     # Add your deployment commands here